version: '3.9'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
     - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
  twitter_producer:
    build: twitter_producer/.
    image: twitter_producer
    environment: 
      twitter_app_secret: #YOUR_TWITTER_APP_SECRET
      twitter_key:  #YOUR_TWITTER_KEY
      twitter_secret:  #YOUR_TWITTER_APP_SECRET
      twitter_app_key:  #YOUR_TWITTER_APP_KEY
  twitter_consumer:
    build: twitter_consumer/.
    image: twitter_consumer
  mongo-on-docker:
    image: mongo
    container_name: mongo-on-docker
    ports:
    - "27017:27017"
    environment: 
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: secret
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
    - "8081:8081"
    depends_on:
      - mongo-on-docker
    links:
    - "mongo-on-docker:mongo"
    environment: 
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_SERVER: mongo-on-docker
  kafka-ui:
    image: provectuslabs/kafka-ui:latest 
    ports:
    - "8080:8080"
    container_name: kafka-ui
    environment: 
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
networks:
  default:
    external: true
    name: my-services-network